const Tone = require('Tone')

const synth = new Tone.Synth();
synth.toMaster()




const pattern = new Tone.Pattern( (time, note) {

})


const convert = (str) => {
  for (var x = 0; x < str.length; x++) {
    if (['a', 'b', 'c', 'd', 'e', 'f', 'g'].includes(str[x]) {
      //note
    } else if (str[x].match(/[!.?]/)) {
      //rest
    } else {
      //duration
    }
  }
}


Tone.Frequency("A4").harmonize([0, 3, 7]); //["A4", "C5", "E5"]


StartAudioContext(Tone.context, 'buttonElement').then(function() { })

arrrbcrdrrerrrrfg
A4, [[B4], C4, [D4]]


//sixteenth to Transport Time
        let fourth = oneNote.dur/4
        let sixteenth = oneNote.dur%4
        let bar
          if (fourth > 3) {
             bar = fourth/4
             fourth = fourth%4
          }


              //      [
              // {time: '1:0', val: 'C4', dur: '8n', vel: '1'},
              // {time: '1:1', val: 'D4', dur: '4n', vel: '.8'},
              // {time: '1:2', val: 'E4', dur: '4n', vel: '.5'},
              // {time: '1:3', val: chord, dur: '4n', vel: '.8'},
              // {time: '2:0:2', val: 'G4', dur: '4n', vel: '1'},
              // {time: '2:1:2', val: 'A4', dur: '8n', vel: '1'}]
                     // {"1*8n", "B3"},
                     // {"1*8n", "A4"},
                     // {"2*4n", "E4"},
                     // {"2*4n", "F4"},
                     // {"3*16n", "B2"}])


          if (letter.match(/[A-G]/i)) {
            nextStartTime = `${nextStartTime} + ${oneNote.dur}`
            oneNote = {vel: '.8', dur: 1}
            oneNote.val = letter + this.randomOctave()
          } else {
            nextStartTime = `${nextStartTime} + ${oneNote.dur} + 16n`
            oneNote = {vel: '.8', dur: 0}
          }
        } else {
          if (letter.match(/[A-G]/i)) {
            oneNote.val = letter + this.randomOctave()
            oneNote.dur += 1
          } else {
            nextStartTime = `${nextStartTime} + 16n`
          }
        }





makeMusicNotes_Obj(str) {  //original BlueMoons translation formula
  var musicNotes = []
  var oneNote = {vel: '.8', dur: 0}
  var nextStartTime = "0:0:0"

  for (let x = 0; x < str.length; x++) {
    let letter = str[x]

    if (letter.match(/\s|[!.,?]|[A-G]/i)) {
        if (oneNote.val) {
          /*  -- end prev note -- */
          oneNote.dur = Tone.Time('16n').mult(oneNote.dur).toNotation()  //convert number of sixteenths to duration
          oneNote.time = Tone.Time(nextStartTime).toBarsBeatsSixteenths() //turn accumlated start time to TransportTime format
          musicNotes.push(oneNote)
              console.log(oneNote)

          nextStartTime = `${nextStartTime} + ${oneNote.dur}` //assign new start time for next note
          oneNote = {vel: '.8', dur: 0}  //replaces oneNote values
        }

        if (letter.match(/[a-g]/)) {
          oneNote.val = letter + this.randomOctave()
          oneNote.dur += 1
        } else if (letter.match(/[A-G]/)) {
          let startingNote = letter + this.randomOctave()
          oneNote.val = this.makeHarmony(startingNote)
          oneNote.dur += 1
        } else {
          nextStartTime = `${nextStartTime} + 16n`
        }
    } else {
        if (oneNote.val) oneNote.dur += 1
        else nextStartTime = `${nextStartTime} + 16n`
    }
  }

  if (oneNote.val) {
      oneNote.dur = Tone.Time('16n').mult(oneNote.dur).toNotation()
      oneNote.time = nextStartTime
      musicNotes.push(oneNote)
  }
  this.setState({ musicArr: musicNotes })
  return musicNotes
}
